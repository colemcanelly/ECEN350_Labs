$date
	Wed Nov  2 17:44:50 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module SignExtenderTest_v $end
$var wire 64 ! BusImm [63:0] $end
$var reg 2 " Ctrl [1:0] $end
$var reg 26 # Input [25:0] $end
$var reg 8 $ passed [7:0] $end
$scope module uut $end
$var wire 2 % Ctrl [1:0] $end
$var wire 26 & Input [25:0] $end
$var wire 1 ' extBit $end
$var wire 64 ( BusImm [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 ) numTests [7:0] $end
$var reg 8 * passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 + actualOut [63:0] $end
$var reg 64 , expectedOut [63:0] $end
$var reg 8 - passed [7:0] $end
$var reg 257 . testType [256:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
bx -
bx ,
bx +
bx *
bx )
b1 (
0'
b10001000100 &
b0 %
b0 $
b10001000100 #
b0 "
b1 !
$end
#40000
1'
b1111111111111111111111111111111111111111111111111111111111011100 !
b1111111111111111111111111111111111111111111111111111111111011100 (
b11111111110111001111111111 #
b11111111110111001111111111 &
b1 $
b1 -
b100100100100000001000000011101000111010001000000101000001101111011100110110100101110100011010010111011001100101 .
b1 ,
b1 +
#80000
0'
b1 !
b1 (
b1001000110100 #
b1001000110100 &
b1 "
b1 %
b10 $
b10 -
b100100100100000001000000011101000111010001000000100111001100101011001110110000101110100011010010111011001100101 .
b1111111111111111111111111111111111111111111111111111111111011100 ,
b1111111111111111111111111111111111111111111111111111111111011100 +
#120000
1'
b1111111111111111111111111111111111111111111111111111111111011100 !
b1111111111111111111111111111111111111111111111111111111111011100 (
b11111111011100111111111111 #
b11111111011100111111111111 &
b11 $
b11 -
b100010000100000001000000011101000111010001000000101000001101111011100110110100101110100011010010111011001100101 .
b1 ,
b1 +
#160000
0'
b100100 !
b100100 (
b100100 #
b100100 &
b10 "
b10 %
b100 $
b100 -
b100010000100000001000000011101000111010001000000100111001100101011001110110000101110100011010010111011001100101 .
b1111111111111111111111111111111111111111111111111111111111011100 ,
b1111111111111111111111111111111111111111111111111111111111011100 +
#200000
1'
b1111111111111111111111111111111111111111111111111111111111011100 !
b1111111111111111111111111111111111111111111111111111111111011100 (
b11111111111111111111011100 #
b11111111111111111111011100 &
b101 $
b101 -
b100001000100000001000000011101000111010001000000101000001101111011100110110100101110100011010010111011001100101 .
b100100 ,
b100100 +
#240000
0'
b1 !
b1 (
b100000 #
b100000 &
b11 "
b11 %
b110 $
b110 -
b100001000100000001000000011101000111010001000000100111001100101011001110110000101110100011010010111011001100101 .
b1111111111111111111111111111111111111111111111111111111111011100 ,
b1111111111111111111111111111111111111111111111111111111111011100 +
#280000
1'
b1111111111111111111111111111111111111111111111111111111111011100 !
b1111111111111111111111111111111111111111111111111111111111011100 (
b11111111111111101110011111 #
b11111111111111101110011111 &
b111 $
b111 -
b100001101000010001000000011101000111010001000000101000001101111011100110110100101110100011010010111011001100101 .
b1 ,
b1 +
#320000
b1000 )
b1000 *
b1000 $
b1000 -
b100001101000010001000000011101000111010001000000100111001100101011001110110000101110100011010010111011001100101 .
b1111111111111111111111111111111111111111111111111111111111011100 ,
b1111111111111111111111111111111111111111111111111111111111011100 +
